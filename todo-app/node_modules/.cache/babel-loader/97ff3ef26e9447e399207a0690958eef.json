{"ast":null,"code":"var _jsxFileName = \"/Users/nhathoang/Documents/React-vntalking/todoList/ebook-reactjs-that-don-gian/phan6/todo-app/src/components/TodoApp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"../components/layout/Header\";\nimport AddTodo from \"./AddTodo\"; //khai báo thư viện axios\n\nimport axios from \"axios\";\n\nfunction TodoApp() {\n  const id_user = 2;\n  const [state, setState] = useState({\n    todos: {}\n  });\n\n  const handleCheckboxChange = id => {\n    if (state.todos.id == id) {\n      setState({\n        todos: { ...state.todos,\n          completed: true\n        }\n      });\n    }\n  };\n\n  const addTodo = title => {\n    const todoData = {\n      user: id_user,\n      title: title,\n      completed: false\n    };\n    axios.post(\"https://profile-json-server.herokuapp.com/todos\", todoData).then(response => {\n      console.log(\"hgjhb\", response.data);\n      setState({\n        todos: { ...state.todos,\n          response\n        }\n      });\n    });\n  };\n\n  const deleteTodo = id => {\n    axios.delete(`https://server1todo.herokuapp.com/todos/${id}`).then(reponse => setState({\n      todos: [...state.todos.filter(todo => {\n        return todo.id !== id;\n      })]\n    }));\n  };\n\n  useEffect(() => {\n    const config = {\n      params: {\n        _limit: 5\n      }\n    }; // tạo GET request để lấy danh sách todos\n\n    axios.get(`https://profile-json-server.herokuapp.com/todos`).then(response => {\n      response.data.map(current_user => {\n        if (current_user.user === 2) {\n          setState({\n            todos: current_user\n          });\n        }\n      });\n    });\n  }, []);\n  console.log(state.todos);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddTodo, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Todos, {\n    todos: state.todos,\n    handleChange: handleCheckboxChange,\n    deleteTodo: deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/nhathoang/Documents/React-vntalking/todoList/ebook-reactjs-that-don-gian/phan6/todo-app/src/components/TodoApp.js"],"names":["React","useState","useEffect","Todos","Header","AddTodo","axios","TodoApp","id_user","state","setState","todos","handleCheckboxChange","id","completed","addTodo","title","todoData","user","post","then","response","console","log","data","deleteTodo","delete","reponse","filter","todo","config","params","_limit","get","map","current_user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"../components/layout/Header\";\nimport AddTodo from \"./AddTodo\"\n\n//khai báo thư viện axios\nimport axios from \"axios\";\n\n\nfunction TodoApp() {\n    const id_user = 2;\n    const [state, setState] = useState({\n        todos: {}\n    });\n\n    const handleCheckboxChange = id => {\n        if (state.todos.id == id){\n            setState({\n                todos: {...state.todos,completed:true}\n            });\n        }\n    };\n    const addTodo = title => {\n        const todoData = {\n            user: id_user,\n            title: title,\n            completed: false\n        }\n        axios.post(\"https://profile-json-server.herokuapp.com/todos\", todoData)\n            .then(response => {\n                console.log(\"hgjhb\",response.data)\n                setState({\n                    todos: {...state.todos,response}\n                })\n            });\n    };\n    const deleteTodo = id => {\n        axios.delete(`https://server1todo.herokuapp.com/todos/${id}`)\n            .then(reponse => setState({\n                todos: [\n                    ...state.todos.filter(todo => {\n                        return todo.id !== id;\n                    })\n                ]\n            }))\n    };\n    useEffect(() => {\n        const config = {\n            params: {\n                _limit: 5\n            }\n\n        }\n        // tạo GET request để lấy danh sách todos\n        axios.get(`https://profile-json-server.herokuapp.com/todos`)\n            .then(response => {\n                response.data.map( current_user =>{\n                    if (current_user.user === 2){\n                        setState({todos: current_user})\n                    }\n                })\n            });\n    }, []);\n    console.log(state.todos)\n    return (\n        <div className=\"container\">\n            <Header />\n            <AddTodo addTodo={addTodo} />\n            <Todos todos={state.todos}\n                   handleChange={handleCheckboxChange}\n                   deleteTodo={deleteTodo} />\n        </div>\n    );\n\n}\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}