{"ast":null,"code":"var _jsxFileName = \"/Users/nhathoang/Documents/React-vntalking/todoList/ebook-reactjs-that-don-gian/phan6/todo-app/src/components/TodoApp.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"../components/layout/Header\";\nimport AddTodo from \"./AddTodo\"; //khai báo thư viện axios\n\nimport axios from \"axios\";\n\nfunction TodoApp() {\n  const [state, setState] = useState({\n    todos: []\n  });\n\n  const handleCheckboxChange = id => {\n    setState({\n      todos: state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n\n        return todo;\n      })\n    });\n  };\n\n  const addTodo = title => {\n    const todoData = {\n      title: title,\n      completed: false\n    };\n    axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData).then(response => {\n      console.log(response.data);\n      setState({\n        todos: [...state.todos, response.data]\n      });\n    });\n  };\n\n  const deleteTodo = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then(reponse => setState({\n      todos: [...state.todos.filter(todo => {\n        return todo.id !== id;\n      })]\n    }));\n  };\n\n  useEffect(() => {\n    const config = {\n      params: {\n        _limit: 5\n      }\n    }; // tạo GET request để lấy danh sách todos\n\n    axios.get(`https://server1todo.herokuapp.com/users`, config).then(response => setState({\n      todos: response.data\n    }));\n  }, []);\n  const user = state.todos.filter(todo => {\n    return todo.id === 2;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AddTodo, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Todos, {\n    todos: user,\n    handleChange: handleCheckboxChange,\n    deleteTodo: deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/nhathoang/Documents/React-vntalking/todoList/ebook-reactjs-that-don-gian/phan6/todo-app/src/components/TodoApp.js"],"names":["React","useState","useEffect","Todos","Header","AddTodo","axios","TodoApp","state","setState","todos","handleCheckboxChange","id","map","todo","completed","addTodo","title","todoData","post","then","response","console","log","data","deleteTodo","delete","reponse","filter","config","params","_limit","get","user"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Todos from \"./Todos\";\nimport Header from \"../components/layout/Header\";\nimport AddTodo from \"./AddTodo\"\n\n//khai báo thư viện axios\nimport axios from \"axios\";\n\nfunction TodoApp() {\n\n    const [state, setState] = useState({\n        todos: []\n    });\n\n    const handleCheckboxChange = id => {\n        setState({\n            todos: state.todos.map(todo => {\n                if (todo.id === id) {\n                    todo.completed = !todo.completed;\n                }\n                return todo;\n            })\n        });\n    };\n    const addTodo = title => {\n        const todoData = {\n            title: title,\n            completed: false\n        }\n        axios.post(\"https://jsonplaceholder.typicode.com/todos\", todoData)\n            .then(response => {\n                console.log(response.data)\n                setState({\n                    todos: [...state.todos, response.data]\n                })\n            });\n    };\n    const deleteTodo = id => {\n        axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n            .then(reponse => setState({\n                todos: [\n                    ...state.todos.filter(todo => {\n                        return todo.id !== id;\n                    })\n                ]\n            }))\n    };\n    useEffect(() => {\n        const config = {\n            params: {\n                _limit: 5\n            }\n\n        }\n        // tạo GET request để lấy danh sách todos\n        axios.get(`https://server1todo.herokuapp.com/users`, config)\n            .then(response => setState({ todos: response.data }));\n    }, []);\n    const user = state.todos.filter( todo =>{\n        return todo.id === 2\n    })\n    return (\n        <div className=\"container\">\n            <Header />\n            <AddTodo addTodo={addTodo} />\n            <Todos todos={user}\n                   handleChange={handleCheckboxChange}\n                   deleteTodo={deleteTodo} />\n                \n        </div>\n    );\n\n}\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}